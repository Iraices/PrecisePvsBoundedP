% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/unc_analysis_assessment_bp.R
\name{unc_analysis_assessment_bp}
\alias{unc_analysis_assessment_bp}
\title{Assessment model -- Bounded Probability}
\usage{
unc_analysis_assessment_bp(
  niter_ale,
  niter_epi,
  threshold,
  percentile_ale,
  suff_stat_concentration,
  suff_stat_consumption,
  consumption_change_vals_EKE,
  consumption_change_probs_EKE,
  consumers_info_sample_size,
  concentration_mu0,
  concentration_v0,
  concentration_alpha0,
  concentration_beta0,
  sufficient_statistics_concentration,
  consumption_mu0,
  consumption_v0,
  consumption_alpha0,
  consumption_beta0,
  sufficient_statistics_consumption,
  consumption_event_alpha0,
  consumption_event_beta0
)
}
\arguments{
\item{niter_ale}{number of generated samples}

\item{niter_epi}{number of generated parameters from the posterior distrbutions
(it indicates the number of repetitions the assessment will be done)}

\item{threshold}{safety threshold}

\item{percentile_ale}{a value that indicates if the assessment is done on all population by \code{NULL} or on a high consumer child by 95. Default is \code{NULL}}

\item{suff_stat_concentration}{a vector of sufficient statistics: sample_size, sample_mean and sample_sd
corresponding to concentration. If sufficient_statistics_concentration = \code{FALSE},
then it is vector of observed data}

\item{suff_stat_consumption}{a vector of sufficient statistics: sample_size, sample_mean and sample_sd
then it is vector of observed data}

\item{consumption_change_vals_EKE}{a vector of elicited values from experts}

\item{consumption_change_probs_EKE}{a vector of elicited probabilities from experts}

\item{consumers_info_sample_size}{a vector with the sample size of non_consumer_sample_size and consumer_sample_size}

\item{concentration_mu0}{prior hyperparameter \emph{mu0} for the normal-gamma distribution corresponding to concentration}

\item{concentration_v0}{prior hyperparameter \emph{v0} for the normal-gamma distribution corresponding to concentration}

\item{concentration_alpha0}{prior hyperparameter \emph{alpha0} for the normal-gamma distribution  corresponding to concentration}

\item{concentration_beta0}{prior hyperparameter \emph{beta0} for the normal-gamma distribution corresponding to concentration}

\item{sufficient_statistics_concentration}{logical; if \code{TRUE}, sufficient statistics (sample_size, sample_mean, sample_variance)
corresponding to concentration are given as input data, otherwise
sufficient_statistics_concentration is given as observed data. Default is \code{TRUE}}

\item{consumption_mu0}{prior hyperparameter \emph{mu0} for the normal-gamma distribution corresponding to consumption}

\item{consumption_v0}{prior hyperparameter \emph{v0} for the normal-gamma distribution corresponding to consumption}

\item{consumption_alpha0}{prior hyperparameter \emph{alpha0} for the normal-gamma distribution corresponding to consumption}

\item{consumption_beta0}{prior hyperparameter \emph{beta0} for the normal-gamma distribution corresponding to consumption}

\item{sufficient_statistics_consumption}{logical; if \code{TRUE}, sufficient statistics (sample_size, sample_mean, sample_variance)
corresponding to consumption are given as input data, otherwise
sufficient_statistics_consumption is given as observed data. Default is \code{TRUE}}

\item{consumption_event_alpha0}{prior hyperparameter \emph{alpha0} for the beta distribution corresponding to consumption event}

\item{consumption_event_beta0}{prior hyperparameter \emph{beta0} for the beta distribution corresponding to consumption event}
}
\value{
a list with the following components
\describe{
\item{prob_consumption_event}{The estimated probability of consumption events}
\item{parameters_concentration}{A list with the values of the prior and posterior parameters of concentration}
\item{parameters_consumption}{A list with the prior and posterior parameters of consumption}
\item{prob_exceed}{A vector with the estimated probabilities of exceeding the threshold (the lenght is niter_epi)}
\item{expected_prob_exceed}{The expected value of the probability of exceeding the threshold}
\item{hdi_prob_exceed}{The highest posterior density interval of the probability of exceeding the threshold}
}
}
\description{
This function does the aluminium exposure assessment. It estimates the expected value and
the highest posterior density of the probability of exceeding the threshold.
Note: the difference respect to the precise probability is that a normal distribution is fitted to the elicited
values from experts using two percentiles and by specifying bounds on the lower percentile.
}
\examples{
\dontrun{
lower_bound_prob = bound_prob_exceed_bp(obj_func_bp = obj_func_bp, maximize = FALSE,
                                        lower_parameters  = c(1, -5, -20),
                                        upper_parameters  = c(6, 1, -10),
                                        niter_ale = 2000, niter_epi = 2000, threshold = 1, percentile_ale = NULL,
                                        suff_stat_concentration = data_assessment$log_concentration_ss_data,
                                        suff_stat_consumption = data_assessment$log_consumption_ss_data,
                                        consumption_change_vals_EKE = c(-15, 7.5),
                                        consumption_change_probs_EKE = c(0.25, 0.75),
                                        consumers_info_sample_size = data_assessment$consumers_info_sample_size,
                                        concentration_mu0 = 2.75,
                                        concentration_v0 = 5, concentration_alpha0 = 1, concentration_beta0 = 1,
                                        sufficient_statistics_concentration = TRUE,
                                        consumption_mu0 = -2.5,
                                        consumption_v0 = 5, consumption_alpha0 = 1, consumption_beta0 = 1,
                                        sufficient_statistics_consumption = TRUE,
                                        consumption_event_alpha0 = 1, consumption_event_beta0 = 1)

upper_bound_prob = bound_prob_exceed_bp(obj_func_bp = obj_func_bp, maximize = TRUE,
                                        lower_parameters  = c(1, -5, -20),
                                        upper_parameters  = c(6, 1, -10),
                                        niter_ale = 2000, niter_epi = 2000, threshold = 1, percentile_ale = NULL,
                                        suff_stat_concentration = data_assessment$log_concentration_ss_data,
                                        suff_stat_consumption = data_assessment$log_consumption_ss_data,
                                        consumption_change_vals_EKE = c(-15, 7.5),
                                        consumption_change_probs_EKE = c(0.25, 0.75),
                                        consumers_info_sample_size = data_assessment$consumers_info_sample_size,
                                        concentration_mu0 = 2.75,
                                        concentration_v0 = 5, concentration_alpha0 = 1, concentration_beta0 = 1,
                                        sufficient_statistics_concentration = TRUE,
                                        consumption_mu0 = -2.5,
                                        consumption_v0 = 5, consumption_alpha0 = 1, consumption_beta0 = 1,
                                        sufficient_statistics_consumption = TRUE,
                                        consumption_event_alpha0 = 1, consumption_event_beta0 = 1)

lower_bound_high_consumer = bound_prob_exceed_bp(obj_func_bp = obj_func_bp, maximize = FALSE,
                                                 lower_parameters  = c(1, -5, -20),
                                                 upper_parameters  = c(6, 1, -10),
                                                 niter_ale = 2000, niter_epi = 2000, threshold = 1, percentile_ale = 95,
                                                 suff_stat_concentration = data_assessment$log_concentration_ss_data,
                                                 suff_stat_consumption = data_assessment$log_consumption_ss_data,
                                                 consumption_change_vals_EKE = c(-15, 7.5),
                                                 consumption_change_probs_EKE = c(0.25, 0.75),
                                                 consumers_info_sample_size = data_assessment$consumers_info_sample_size,
                                                 concentration_mu0 = 2.75,
                                                 concentration_v0 = 5, concentration_alpha0 = 1, concentration_beta0 = 1,
                                                 sufficient_statistics_concentration = TRUE,
                                                 consumption_mu0 = -2.5,
                                                 consumption_v0 = 5, consumption_alpha0 = 1, consumption_beta0 = 1,
                                                 sufficient_statistics_consumption = TRUE,
                                                 consumption_event_alpha0 = 1, consumption_event_beta0 = 1)


upper_bound_high_consumer = bound_prob_exceed_bp(obj_func_bp = obj_func_bp, maximize = TRUE,
                                                 lower_parameters  = c(1, -5, -20),
                                                 upper_parameters  = c(6, 1, -10),
                                                 niter_ale = 2000, niter_epi = 2000, threshold = 1, percentile_ale = 95,
                                                 suff_stat_concentration = data_assessment$log_concentration_ss_data,
                                                 suff_stat_consumption = data_assessment$log_consumption_ss_data,
                                                 consumption_change_vals_EKE = c(-15, 7.5),
                                                 consumption_change_probs_EKE = c(0.25, 0.75),
                                                 consumers_info_sample_size = data_assessment$consumers_info_sample_size,
                                                 concentration_mu0 = 2.75,
                                                 concentration_v0 = 5, concentration_alpha0 = 1, concentration_beta0 = 1,
                                                 sufficient_statistics_concentration = TRUE,
                                                 consumption_mu0 = -2.5,
                                                 consumption_v0 = 5, consumption_alpha0 = 1, consumption_beta0 = 1,
                                                 sufficient_statistics_consumption = TRUE,
                                                 consumption_event_alpha0 = 1, consumption_event_beta0 = 1)

}
}
